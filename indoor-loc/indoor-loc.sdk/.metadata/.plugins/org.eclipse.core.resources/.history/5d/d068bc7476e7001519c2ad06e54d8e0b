/*
 * uwb.c: UWB Control
 * Author: Stephanie Kunkel
 */

#include "uwb.h"

/*
 * Global Variables
 */
XGpio uwbGpio;
XSpi decaSpi;
UwbState state = send;

/*
 * State Machine
 */
void uwbStateMachine() {
	//Variables
	int status;
	double distance;

	//State Machine
	switch (state) {
	case send:
		status = transmit();
		if (status == DWT_SUCCESS) {
			state = receive;
		}
		break;
	case receive:
		status = getDistance(&distance);
		if (status == DWT_SUCCESS) {
			//Do something with distance TODO

			state = wait;
		} else if (status == DWT_ERROR) {
			state = send;
		}
		break;
	case wait:
		if (waitAfterReceive() <= 0) {
			state = send;
		}
		break;
	default:
		break;
	}
}

/*
 * Reset DW1000
 */
void reset_DW1000() {
	//Variables
	u32 uwbIn;

	//Initialize UWB GPIO
	XGpio_Initialize(&uwbGpio, XPAR_AXI_GPIO_UWB_DEVICE_ID);

	//Reset On
	XGpio_DiscreteWrite(&uwbGpio, 1, 0); // reset on
	uwbIn = XGpio_DiscreteRead(&uwbGpio, 2);

	//Reset Off
	XGpio_DiscreteWrite(&uwbGpio, 1, 0xff); // reset off
	uwbIn = XGpio_DiscreteRead(&uwbGpio, 2);
	while (0 == (uwbIn & 0x4)) {
		uwbIn = XGpio_DiscreteRead(&uwbGpio, 2);
	}
	myprintf("UBW reset completed\r\n");

	deca_sleep(2);
}
